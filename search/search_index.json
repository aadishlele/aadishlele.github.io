{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to my website","text":""},{"location":"#hello-i-am-aadish-lele","title":"Hello, I am Aadish Lele","text":"<p>I am part of Team 309A in EGR 314. Our main porject is making a spinning top that will change direction based upon temperature values. When the temperature increases beyond a certain threshold, the spinning top motor will change the direction and move counter clockwise. This system is designed to inspire K-12 students to learn and understand how sensor values changes the way actuators function.</p> <p>This is the Team Website: Team 309A Website Link</p> <p>Team Members and their webites:    - Aadish Website - Actuator  - Shaurya Website - Sensor</p> <p>Preperation Date: January 16  </p> <p>Spring 2025  </p> <p>Arizona State University  EGR 314, Prof. Nichols</p>"},{"location":"Application%20Programming%20Interface%20%28API%29/","title":"API","text":""},{"location":"Application%20Programming%20Interface%20%28API%29/#user-id-assignments","title":"User ID Assignments","text":"User User ID Aadish A Shaurya S"},{"location":"Application%20Programming%20Interface%20%28API%29/#message-structure","title":"Message Structure","text":"Byte # Field Name Data Type Description 1-2 Prefix <code>uint16_t</code> Message start identifier 3 Sender ID <code>uint8_t</code> Identifies who sent the message 4 Receiver ID <code>uint8_t</code> Identifies who should receive the message 5-6 Data <code>uint16_t</code> Message-specific data 7-8 Suffix <code>uint16_t</code> Message end identifier"},{"location":"Application%20Programming%20Interface%20%28API%29/#messages-my-subsystem-sends-receives","title":"Messages My Subsystem Sends &amp; Receives","text":""},{"location":"Application%20Programming%20Interface%20%28API%29/#message-type-1-motor-direection-command","title":"Message Type 1 \u2013 Motor Direection Command","text":"Byte Variable Name Data Type Min Value Max Value Example 1-2 <code>prefix</code> <code>uint16_t</code> 0x0001 0x0001 0x0001 3 <code>sender_id</code> <code>uint8_t</code> 0xFF 0xFF 0xFF 4 <code>receiver_id</code> <code>uint8_t</code> 0xFD 0xFD 0xFD 5-6 <code>motor_direction</code> <code>uint16_t</code> 0x40 (Forward) 0x41 (Reverse) 0x40 7-8 <code>suffix</code> <code>uint16_t</code> 0x0020 0x0020 0x0020 <p>Function: Commands Aadish to change motor direction.</p>"},{"location":"Application%20Programming%20Interface%20%28API%29/#message-type-2-acknowledgement","title":"Message Type 2 \u2013 Acknowledgement","text":"Byte Variable Name Data Type Min Value Max Value Example 1-2 <code>prefix</code> <code>uint16_t</code> 0x0002 0x0002 0x0002 3 <code>sender_id</code> <code>uint8_t</code> 0xFC 0xFC 0xFC 4 <code>receiver_id</code> <code>uint8_t</code> 0xFD 0xFD 0xFD 5-6 <code>motor_speed</code> <code>uint16_t</code> 0x42 (Increase) 0x43 (Decrease) 0x42 7-8 <code>suffix</code> <code>uint16_t</code> 0x0021 0x0021 0x0021 <p>Function: Updates the motor speed in Aadish\u2019s motor driver system.</p>"},{"location":"Application%20Programming%20Interface%20%28API%29/#message-handling-code","title":"Message Handling Code","text":"<p>#include \\&lt;xc.h&gt; #include \\&lt;stdint.h&gt; #include \\&lt;stdbool.h&gt; #define UART_BUFFER_SIZE 10 #define MSG_PREFIX_1 0x0001  // Change Motor Direction #define MSG_PREFIX_2 0x0002  // Update Motor Speed #define MSG_SUFFIX_1 0x0020 #define MSG_SUFFIX_2 0x0021 // UART Receive Buffer volatile uint8_t uartBuffer[UART_BUFFER_SIZE]; volatile uint8_t bufferIndex \\= 0; // Function Prototypes void UART_Init(void); void UART_Send(uint8_t *message, uint8_t length); void Process_Message(uint8_t *message, uint8_t length); void UART_Receive_Handler(void); void UART_Init(void) {     // Configure UART for 9600 baud, 8-N-1     SPBRG \\= 25; // Adjust for different baud rates     TXSTAbits.BRGH \\= 1;     RCSTAbits.SPEN \\= 1; // Enable UART     RCSTAbits.CREN \\= 1; // Enable Reception     TXSTAbits.TXEN \\= 1; // Enable Transmission     // Enable Interrupts     PIE1bits.RCIE \\= 1;     INTCONbits.PEIE \\= 1;     INTCONbits.GIE \\= 1; } void UART_Send(uint8_t *message, uint8_t length) {     for (uint8_t i \\= 0; i \\&lt; length; i++) {         TXREG \\= message[i];         while (!TXSTAbits.TRMT);     } } void Process_Message(uint8_t *message, uint8_t length) {     uint16_t prefix \\= (message[0] \\&lt;\\&lt; 8) | message[1];     uint16_t suffix \\= (message[6] \\&lt;\\&lt; 8) | message[7];     if (prefix \\== MSG_PREFIX_1 &amp;&amp; suffix \\== MSG_SUFFIX_1) {         uint8_t motor_direction \\= message[4];         // Apply motor direction change here     }     else if (prefix \\== MSG_PREFIX_2 &amp;&amp; suffix \\== MSG_SUFFIX_2) {         uint16_t motor_speed \\= message[4];         // Apply motor speed update here     }     uint8_t ack_msg[] \\= {message[0], message[1], 0x01};     UART_Send(ack_msg, 3); } void UART_Receive_Handler(void) {     if (PIR1bits.RCIF) {         uint8_t receivedByte \\= RCREG;         if (bufferIndex \\== 0 &amp;&amp; receivedByte != 0x00) {             uartBuffer[bufferIndex++] \\= receivedByte;         } else if (bufferIndex &gt; 0) {             uartBuffer[bufferIndex++] \\= receivedByte;             if (bufferIndex &gt;= UART_BUFFER_SIZE) {                 Process_Message(uartBuffer, bufferIndex);                 bufferIndex \\= 0;             }         }     } }  </p>"},{"location":"Bill%20Of%20Materials/","title":"Bill Of Materials","text":"<p>Aadish Lele</p> <p>Individual Bill of Materials </p> <p>Indidvidual Bill of Materials bom.xlsx</p>"},{"location":"Individual%20Block%20Diagram/","title":"Individual Block Diagram","text":""},{"location":"Individual%20Block%20Diagram/#individual-block-diagram","title":"Individual Block Diagram","text":"<p>EGR314 Individual Block Diagram  </p> <p>EGR314 Individual Block Diagram PDF: BLOCKDIAGRAM.pdf</p>"},{"location":"Individual%20Component%20Selection/","title":"Individual Component Selection","text":"<p>Individual Component Selection (2).md</p>"},{"location":"Schematic/","title":"Schematic","text":""},{"location":"Schematic/#schematic-design-of-motor-driver-subsystem","title":"Schematic design of Motor driver Subsystem","text":"<p>EGR314 Aadish Lele Schematic </p> <p>EGR314 Motor Driver Subsystem PDF file SCHEMATIC.pdf</p> <p>EGR314 Motor Driver Subsystem PCB: </p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}